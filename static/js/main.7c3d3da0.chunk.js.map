{"version":3,"sources":["ToDo.js","App.js","index.js"],"names":["ToDo","props","className","list","map","item","style","textDecoration","isCompleted","onClick","toggleState","id","type","checked","onChange","text","deleteItem","App","useState","todo","setTodo","setList","listView","setListView","handleSubmit","e","preventDefault","trim","length","currentList","filter","updatedList","onSubmit","placeholder","event","target","value","shortid","generate","newlist","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAmCeA,G,MAhCF,SAACC,GACZ,OACE,qBAAKC,UAAU,OAAf,SACGD,EAAME,KAAKC,KAAI,SAACC,GAAD,OACd,sBAAmBH,UAAU,eAA7B,UACE,qBACEI,MAAO,CACLC,eAAgBF,EAAKG,YAAc,eAAiB,QAEtDC,QAAS,kBAAMR,EAAMS,YAAYL,EAAKM,KAJxC,UAME,uBACEC,KAAK,WACLC,QAASR,EAAKG,YACdM,SAAU,kBAAOT,EAAKG,eACrB,IACFH,EAAKU,QAGR,sBAAKb,UAAU,UAAf,UACG,MACH,wBAAUO,QAAS,kBAAMR,EAAMe,WAAWX,EAAKM,KAA/C,eAGE,sBAAMT,UAAU,cAAhB,yBApBMG,EAAKM,W,MC8FRM,MAhGf,WAAgB,IAAD,EACWC,mBAAS,CAAEH,KAAM,KAD5B,mBACNI,EADM,KACAC,EADA,OAEWF,mBAAS,IAFpB,mBAENf,EAFM,KAEAkB,EAFA,OAGmBH,mBAAS,OAH5B,mBAGNI,EAHM,KAGIC,EAHJ,KAcPC,EAAe,SAACC,GACpBA,EAAEC,iBACEP,EAAKJ,KAAKY,OAAOC,OAAS,GAC5BP,GAAQ,SAAClB,GAAD,4BAAcA,GAAd,CAAoBgB,OAI9BC,EAAQ,CACNL,KAAM,MAeNc,EAAW,YAAO1B,GAkCtB,MAjCgB,QAAbmB,EACDO,EAAW,YAAO1B,GAEE,WAAbmB,EACPO,EAAcA,EAAYC,QAAO,SAAAzB,GAAI,OAAyB,IAArBA,EAAKG,eAE3B,cAAbc,IACNO,EAAcA,EAAYC,QAAO,SAAAzB,GAAI,OAAyB,IAArBA,EAAKG,gBA2B9C,sBAAKN,UAAU,MAAf,UACE,wBAAQS,GAAG,SAAX,wBACA,0DAA6B,IAAKR,EAAK2B,QAAO,SAAAzB,GAAI,OAAyB,IAArBA,EAAKG,eAAuBoB,OAAlF,QACA,sBAAK1B,UAAU,YAAf,UACA,wBAAQO,QA5BM,WAChBc,EAAY,QA2BV,mBACA,wBAAQd,QAzBS,WACnBc,EAAY,WAwBV,sBACA,wBAAQd,QAtBY,WACtBc,EAAY,cAqBV,4BAEA,wBAAQd,QApBY,WACtB,IAAIsB,EAAc5B,EAAK2B,QAAO,SAAAzB,GAAI,OAAyB,IAArBA,EAAKG,eAC3Ca,EAAQ,YAAIU,KAkBV,+BACA,uBAAMC,SAAUR,EAAhB,UACE,uBACES,YAAY,aACZnB,SA/Ea,SAACoB,GACpBd,GAAQ,SAACD,GAAD,mBAAC,eACJA,GADG,IAENJ,KAAMmB,EAAMC,OAAOC,MACnBzB,GAAI0B,IAAQC,WACZ9B,aAAa,QA2ET4B,MAAOjB,EAAKJ,OAEd,wBAAQN,QAASe,EAAjB,kBAEF,8BACE,cAAC,EAAD,CAAMd,YAhEQ,SAACC,GAEnB,IADA,IAAI4B,EAAO,YAAOpC,GACTqC,EAAI,EAAGA,EAAID,EAAQX,OAAQY,IAC9BD,EAAQC,GAAG7B,KAAOA,IACpB4B,EAAQC,GAAGhC,aAAe+B,EAAQC,GAAGhC,aAGzCa,EAAQ,YACFkB,KAwD8BpC,KAAM0B,EAAab,WAzBtC,SAACL,GAClB,IAAI4B,EAAUpC,EAAK2B,QAAO,SAAAzB,GAAI,OAAIA,EAAKM,KAAOA,KAC9CU,EAAQ,YACFkB,aCpEVE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7c3d3da0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ToDo.css\";\n\nconst ToDo = (props) => {\n  return (\n    <div className=\"list\">\n      {props.list.map((item) => (\n        <div key={item.id} className=\"list-content\">\n          <li\n            style={{\n              textDecoration: item.isCompleted ? \"line-through\" : \"none\",\n            }}\n            onClick={() => props.toggleState(item.id)}\n          >\n            <input\n              type=\"checkbox\"\n              checked={item.isCompleted}\n              onChange={() => !item.isCompleted}\n            />{\" \"}\n            {item.text}\n          </li>\n          \n          <div className=\"tooltip\">\n            {\"   \"}\n          <button   onClick={() => props.deleteItem(item.id)}>\n            x\n          </button>\n            <span className=\"tooltiptext\">delete</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ToDo;\n","import React, { useState } from \"react\";\nimport shortid from \"shortid\";\nimport ToDo from \"./ToDo\";\nimport \"./App.css\";\n\nfunction App() {\n  const [todo, setTodo] = useState({ text: \"\" });\n  const [list, setList] = useState([]);\n  const [listView, setListView] = useState(\"all\")\n  \n  const handleChange = (event) => {\n    setTodo((todo) => ({\n      ...todo,\n      text: event.target.value,\n      id: shortid.generate(),\n      isCompleted: false,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (todo.text.trim().length > 0) {\n      setList((list) => [...list, todo]);\n    }\n\n    //Resetting the  input to blank again after the todo is added\n    setTodo({\n      text: \"\",\n    });\n  };\n\n  const toggleState = (id) => {\n    let newlist = [...list];\n    for (let i = 0; i < newlist.length; i++) {\n      if (newlist[i].id === id) {\n        newlist[i].isCompleted = !newlist[i].isCompleted;\n      }\n    }\n    setList(\n      [...newlist])\n  }\n \n  let currentList = [...list]\n  if(listView === \"all\") {\n    currentList = [...list]\n  }\n  else if (listView === \"active\"){\n    currentList = currentList.filter(item => item.isCompleted === false)\n  }\n  else if(listView === \"completed\"){\n    currentList = currentList.filter(item => item.isCompleted === true)\n  }\n\n  const toggleAll = () => {\n    setListView(\"all\")\n  }\n\n  const toggleActive = () => {\n    setListView(\"active\")\n  }\n\n  const toggleCompleted = () => {\n    setListView(\"completed\")\n  }\n\n  const deleteCompleted = () => {\n    let updatedList = list.filter(item => item.isCompleted === false)\n    setList([...updatedList])\n  }\n\n  const deleteItem = (id) => {\n    let newlist = list.filter(item => item.id !== id)\n    setList(\n      [...newlist])\n  }\n\n  return (\n    <div className=\"app\">\n      <header id=\"header\">TO-DO LIST</header>\n      <p> Number of active todos :{\" \"}{list.filter(item => item.isCompleted === false).length}  </p>\n      <div className=\"buttonGrp\">\n      <button onClick = {toggleAll}> ALL </button>\n      <button onClick = {toggleActive}> ACTIVE </button>\n      <button onClick = {toggleCompleted}> COMPLETED </button>\n      </div>    \n      <button onClick = {deleteCompleted}> Delete Completed</button>  \n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder=\"Enter Here\"\n          onChange={handleChange}\n          value={todo.text}\n        ></input>\n        <button onClick={handleSubmit}>+</button>\n      </form>\n      <div>\n        <ToDo toggleState={toggleState} list={currentList} deleteItem ={ deleteItem}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n \n"],"sourceRoot":""}